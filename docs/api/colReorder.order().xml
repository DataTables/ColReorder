<?xml version="1.0" encoding="UTF-8" ?>
<dt-api library="ColReorder">
	<name>colReorder.order()</name>
	<summary>Get / set column order</summary>
	<since>1.2.0</since>

	<type type="function">
		<signature>colReorder.order()</signature>
		<description>
			Get the current column order.
		</description>
		<returns type="array">
			Returns an array of column indexes. The column index given is the original column index, with its new position defined by the location in the returned array.
		</returns>
	</type>

	<type type="function">
		<signature>colReorder.order( order [, originalIndexes ] )</signature>
		<description>
			Set the column order.
		</description>
		<parameter name="order" type="array">
			Array of column indexes that define where the columns should be placed after the reorder. 

			Please note that by default the column indexes given by this array are assumed to be the **current** column indexes. The optional second parameter can be used to indicate that they should actually be treated as the original indexes.

			Please note that the column indexes in the array are _not_ the original column index, but rather than _current_ column index. i.e. `0` will always refer to the first column in the table, regardless of the table ordering.
		</parameter>
		<parameter name="originalIndexes" type="boolean" since="1.3.0" default="false">
			The order array defines the positions that columns should be shown through column indexes but these indexes can be one of:

			1. The **current** column index (i.e. even if column reordering has already happened)
			2. The **original** column index (i.e. the original index of the column before ColReorder has done any reordering)

			Set to be `true` to indicate that the indexes passed in are the original indexes. `false` or `undefined` (default) will treat them as the current indexes.
		</parameter>
		<returns type="DataTables.Api">
			DataTables API instance for chaining
		</returns>
	</type>

	<description>
		This method provides the ability to get the current column order of a DataTable and also to set a new order.

		The reorder triggered by this method is immediate and there is no requirement to redraw the table.
	</description>

	<example title="Reverse the order of the columns in the table on a button click"><![CDATA[

var table = $('#example').DataTable( {
	colReorder: true
} );

$('#reverse').click( function (e) {
	table.colReorder.order( [ 5, 4, 3, 2, 1, 0 ] );
} );

]]></example>

	<example title="Restore the original order, regardless of any ordering applied (by passing the second parameter as `true`)"><![CDATA[

var table = $('#example').DataTable( {
	colReorder: true
} );

$('#reverse').click( function (e) {
	table.colReorder.order( [ 0, 1, 2, 3, 4, 5 ], true );
} );

]]></example>

</dt-api>