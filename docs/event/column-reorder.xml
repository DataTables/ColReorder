<?xml version="1.0" encoding="UTF-8" ?>
<dt-event library="ColReorder">
	<name>column-reorder</name>
	<summary>Columns have been reordered by the end user or API</summary>
	<since>1.2.0</since>

	<type type="function">
		<signature>function( e, settings, details )</signature>
		<parameter type="object" name="e">
			jQuery event object
		</parameter>
		<parameter type="DataTable.Settings" name="settings">
			DataTables settings object for the table that has been modified
		</parameter>
		<parameter type="object" name="details">
			An object that contains information about the reordered columns:

			* `-type array` `from` - An array of the column indexes that are being moved
			* `-type integer` `to` - Column index that the column has been moved to
			* `-type array` `mapping` - Array of integers that define how the old column positions map to the new positions
		</parameter>
		<scope>HTML table element</scope>
	</type>

	<description>
		When using ColReorder you may wish to know when a table has been reordered by an end user or through the API. This event provides that information.

		This event is triggered when a column's data structure is moved internally - it does not signify that the reordering has been completed for all columns. For example the `-api colReorder.order()` method can cause multiple column reordering actions. Listen for `-event columns-reordered` to know then all columns have been updated and the table is fully up to date with the requested action.

		Please note that, as with all DataTables emitted events, this event is triggered with the `dt` namespace. As such, to listen for this event, you must also use the `dt` namespace by simply appending `.dt` to your event name, or use the `dt-api on()` method to listen for the event which will automatically append this namespace.
	</description>

	<example title="Add a class to the reordered column"><![CDATA[
var table = new DataTable('#myTable', {
	colReorder: true
});

table.on('column-reorder', function (e, settings, details) {
	var headerCell = $(table.column(details.to).header());

	headerCell.addClass('reordered');

	setTimeout(function () {
		headerCell.removeClass('reordered');
	}, 2000);
});
]]></example>
</dt-event>