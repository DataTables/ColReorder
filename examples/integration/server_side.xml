<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ssp" order="5">

<css lib="datatables colreorder" />
<js lib="jquery datatables colreorder">
<![CDATA[
$('#example').DataTable({
	ajax: '../../../../examples/server_side/scripts/objects.php',
	columns: [
		{ data: 'first_name' },
		{ data: 'last_name' },
		{ data: 'position' },
		{ data: 'office' },
		{ data: 'start_date' },
		{ data: 'salary' }
	],
	colReorder: true,
	processing: true,
	serverSide: true
});
]]>
</js>

<js-vanilla>
<![CDATA[
new DataTable('#example', {
	ajax: '../../../../examples/server_side/scripts/objects.php',
	columns: [
		{ data: 'first_name' },
		{ data: 'last_name' },
		{ data: 'position' },
		{ data: 'office' },
		{ data: 'start_date' },
		{ data: 'salary' }
	],
	colReorder: true,
	processing: true,
	serverSide: true
});
]]>
</js-vanilla>

<title lib="ColReorder">Server-side processing</title>

<info><![CDATA[

Server-side processing can be exceptionally useful in DataTables when dealing with massive data sets, and ColReorder works with this as would be expected.

It is recommend that you use object based data with server-side processing and ColReorder, as this provides easily understandable mapping between the the columns and the data relation on the server, otherwise you need to work out array indexes on each call!

]]></info>

</dt-example>
